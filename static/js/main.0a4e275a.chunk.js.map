{"version":3,"sources":["components/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","useState","age","setAge","nationality","setNat","Card","style","width","Img","variant","src","image","Body","Title","Text","name","email","Button","onClick","App","users","setUsers","useEffect","fetch","then","response","json","data","console","log","results","map","user","picture","large","first","last","nat","dob","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPA0BeA,EAvBD,SAACC,GACX,MAAsBC,oBAAS,GAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAoBC,EAApB,KACA,OACI,8BACI,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACI,cAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAKX,EAAMY,QACnC,eAACN,EAAA,EAAKO,KAAN,WACI,cAACP,EAAA,EAAKQ,MAAN,2BACA,eAACR,EAAA,EAAKS,KAAN,WACI,uCAAUf,EAAMgB,QAChB,wCAAWhB,EAAMiB,SAChBb,GAAe,8CAAiBJ,EAAMI,eACtCF,GAAO,sCAASF,EAAME,UAE3B,cAACgB,EAAA,EAAD,CAAQR,QAAQ,UAAUS,QAAS,kBAAMd,GAAQD,IAAjD,8BACA,cAACc,EAAA,EAAD,CAAQR,QAAQ,UAAUS,QAAS,kBAAMhB,GAAQD,IAAjD,+BCeLkB,EA1BH,WACV,MAA0BnB,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KAUA,OARAC,qBAAU,WACRC,MAAM,wCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZN,EAASM,EAAKG,cAEjB,IAED,mCACGV,EAAMW,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CACErB,MAAOqB,EAAKC,QAAQC,MACpBnB,KAAMiB,EAAKjB,KAAKoB,MAAQ,IAAMH,EAAKjB,KAAKqB,KACxCpB,MAAOgB,EAAKhB,MACZb,YAAa6B,EAAKK,IAClBpC,IAAK+B,EAAKM,IAAIrC,YCfTsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0a4e275a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, Button } from 'react-bootstrap'\r\n\r\nconst Cards = (props) => {\r\n    const [age, setAge] = useState(false);\r\n    const [nationality, setNat] = useState(false);\r\n    return (\r\n        <div>\r\n            <Card style={{ width: '25rem' }}>\r\n                <Card.Img variant=\"top\" src={props.image} />\r\n                <Card.Body>\r\n                    <Card.Title>Contact List</Card.Title>\r\n                    <Card.Text>\r\n                        <p>Name: {props.name}</p>\r\n                        <p>Email: {props.email}</p>\r\n                        {nationality && <p>Nationality: {props.nationality}</p>}\r\n                        {age && <p>Age: {props.age}</p>}\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\" onClick={() => setNat(!nationality)}>Show Nationality</Button>\r\n                    <Button variant=\"primary\" onClick={() => setAge(!age)}>Show Age</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React, { useEffect, useState } from 'react';\r\n\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Card from './components/Cards';\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://randomuser.me/api/?results=6')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setUsers(data.results);\r\n      });\r\n  }, [])\r\n  return (\r\n    <>\r\n      {users.map(user => (\r\n        <Card\r\n          image={user.picture.large}\r\n          name={user.name.first + ' ' + user.name.last}\r\n          email={user.email}\r\n          nationality={user.nat}\r\n          age={user.dob.age}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}